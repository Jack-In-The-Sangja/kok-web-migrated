{{#imports}}
import { {{{.}}} } from './{{#lambda.kebabcase}}{{{.}}}{{/lambda.kebabcase}}';
{{/imports}}

/**
 * {{{description}}}
 * @export
 * @interface {{classname}}
 */
export interface {{classname}} {{#parent}}extends {{{.}}} {{/parent}}{
{{#additionalPropertiesType}}
    [key: string]: {{{additionalPropertiesType}}}{{^additionalPropertiesIsAnyType}}{{#hasVars}} | any{{/hasVars}}{{/additionalPropertiesIsAnyType}};

{{/additionalPropertiesType}}
{{#vars}}
  {{^deprecated}}
    /**
     * {{{description}}}
     * @type {{=<% %>=}}{<%&datatype%>}<%={{ }}=%>
     * @memberof {{classname}}
     */
    '{{baseName}}'{{^required}}?{{/required}}: {{#isEnum}}{{#isBoolean}}{{#allowableValues}}{{#enumVars}}{{{value}}}{{^-last}} | {{/-last}}{{/enumVars}}{{/allowableValues}}{{/isBoolean}}{{^isBoolean}}{{#allowableValues}}{{#enumVars.0}}{{^enumVars.1}}{{#enumVars}}{{{value}}}{{/enumVars}}{{/enumVars.1}}{{#enumVars.1}}{{{datatypeWithEnum}}}{{/enumVars.1}}{{/enumVars.0}}{{/allowableValues}}{{^allowableValues}}{{{datatypeWithEnum}}}{{/allowableValues}}{{/isBoolean}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{/isEnum}};
    {{/deprecated}}
    {{/vars}}
}{{#hasEnums}}

{{#vars}}
{{#isEnum}}
{{^isBoolean}}
{{#stringEnums}}
{{#allowableValues}}
{{#enumVars.0}}
{{#enumVars.1}}
/**
    * @export
    * @enum {string}
    */
export type {{classname}}{{enumName}} = 
{{#allowableValues}}
  {{#enumVars}}
  {{{value}}}{{^-last}}|{{/-last}}
  {{/enumVars}}
{{/allowableValues}}


{{/enumVars.1}}
{{/enumVars.0}}
{{/allowableValues}}
{{/stringEnums}}
{{/isBoolean}}
{{/isEnum}}
{{/vars}}
{{/hasEnums}}