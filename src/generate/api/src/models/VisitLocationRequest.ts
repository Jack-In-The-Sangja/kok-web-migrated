/* tslint:disable */
/* eslint-disable */
/**
 * 체험콕 서비스
 * 체험단 모집 및 관리 서비스 API
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 📍 방문 위치 상세 정보 (방문형 캠페인에만 해당)
 * @export
 * @interface VisitLocationRequest
 */
export interface VisitLocationRequest {
    /**
     * 방문 장소 주소 - 인플루언서가 방문해야 할 정확한 주소
     * @type {string}
     * @memberof VisitLocationRequest
     */
    address: string;
    /**
     * 위도 좌표 - 지도 표시 및 위치 확인용 (소수점 6자리까지)
     * @type {number}
     * @memberof VisitLocationRequest
     */
    latitude?: number;
    /**
     * 경도 좌표 - 지도 표시 및 위치 확인용 (소수점 6자리까지)
     * @type {number}
     * @memberof VisitLocationRequest
     */
    longitude?: number;
    /**
     * 운영시간 - 인플루언서가 방문 가능한 시간대
     * @type {string}
     * @memberof VisitLocationRequest
     */
    operatingHours?: string;
    /**
     * 휴무일 - 방문하면 안 되는 날짜 정보
     * @type {string}
     * @memberof VisitLocationRequest
     */
    closedDays?: string;
    /**
     * 주차정보 - 방문 시 참고할 주차 관련 안내사항
     * @type {string}
     * @memberof VisitLocationRequest
     */
    parkingInfo?: string;
    /**
     * 기타 추가 정보 - 방문 시 알아야 할 특별한 안내사항이나 주의사항
     * @type {string}
     * @memberof VisitLocationRequest
     */
    additionalInfo?: string;
}

/**
 * Check if a given object implements the VisitLocationRequest interface.
 */
export function instanceOfVisitLocationRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function VisitLocationRequestFromJSON(json: any): VisitLocationRequest {
    return VisitLocationRequestFromJSONTyped(json, false);
}

export function VisitLocationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): VisitLocationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': json['address'],
        'latitude': !exists(json, 'latitude') ? undefined : json['latitude'],
        'longitude': !exists(json, 'longitude') ? undefined : json['longitude'],
        'operatingHours': !exists(json, 'operatingHours') ? undefined : json['operatingHours'],
        'closedDays': !exists(json, 'closedDays') ? undefined : json['closedDays'],
        'parkingInfo': !exists(json, 'parkingInfo') ? undefined : json['parkingInfo'],
        'additionalInfo': !exists(json, 'additionalInfo') ? undefined : json['additionalInfo'],
    };
}

export function VisitLocationRequestToJSON(value?: VisitLocationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'latitude': value.latitude,
        'longitude': value.longitude,
        'operatingHours': value.operatingHours,
        'closedDays': value.closedDays,
        'parkingInfo': value.parkingInfo,
        'additionalInfo': value.additionalInfo,
    };
}

