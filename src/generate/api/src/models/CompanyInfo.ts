/* tslint:disable */
/* eslint-disable */
/**
 * 체험콕 서비스
 * 체험단 모집 및 관리 서비스 API
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 🏢 캠페인 주최 업체 정보
 * @export
 * @interface CompanyInfo
 */
export interface CompanyInfo {
    /**
     * 업체명 - 캠페인을 주최하는 회사/브랜드 이름
     * @type {string}
     * @memberof CompanyInfo
     */
    companyName: string;
    /**
     * 사업자등록번호 - 업체의 공식 등록번호 (선택사항)
     * @type {string}
     * @memberof CompanyInfo
     */
    businessRegistrationNumber?: string;
    /**
     * 담당자명 - 캠페인 관련 문의 시 연락할 담당자 이름
     * @type {string}
     * @memberof CompanyInfo
     */
    contactPerson?: string;
    /**
     * 연락처 - 담당자의 전화번호 또는 연락 가능한 번호
     * @type {string}
     * @memberof CompanyInfo
     */
    phoneNumber?: string;
}

/**
 * Check if a given object implements the CompanyInfo interface.
 */
export function instanceOfCompanyInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "companyName" in value;

    return isInstance;
}

export function CompanyInfoFromJSON(json: any): CompanyInfo {
    return CompanyInfoFromJSONTyped(json, false);
}

export function CompanyInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'companyName': json['companyName'],
        'businessRegistrationNumber': !exists(json, 'businessRegistrationNumber') ? undefined : json['businessRegistrationNumber'],
        'contactPerson': !exists(json, 'contactPerson') ? undefined : json['contactPerson'],
        'phoneNumber': !exists(json, 'phoneNumber') ? undefined : json['phoneNumber'],
    };
}

export function CompanyInfoToJSON(value?: CompanyInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'companyName': value.companyName,
        'businessRegistrationNumber': value.businessRegistrationNumber,
        'contactPerson': value.contactPerson,
        'phoneNumber': value.phoneNumber,
    };
}

